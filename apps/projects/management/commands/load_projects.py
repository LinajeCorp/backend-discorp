from django.core.management.base import BaseCommand
from apps.projects.models import Project


class Command(BaseCommand):
    help = 'Carga todos los proyectos iniciales en la base de datos'

    def handle(self, *args, **options):
        """Carga todos los proyectos de la tabla"""
        
        projects_data = [
            {
                'nombre': 'App Polizas',
                'fase': 'ejecucion',
                'objetivo': 'Sistema de app m√≥vil que permitir√° la cotizaci√≥n y adquisici√≥n de seguros RCV y servicios funerarios con aseguradoras nacionales.',
                'status': 'en_curso',
                'prioridad': 'normal',
                'ultima_actualizacion': 'Iniciando el desarrollo.',
                'listo_para_ofrecer': 'no'
            },
            {
                'nombre': 'Autopago',
                'fase': 'ejecucion',
                'objetivo': 'Desarrollar sistema para comercios y/o eventos que permita la consulta de un servicio o estado de cuenta a la vez el pago de la misma o de productos.',
                'status': 'en_curso',
                'prioridad': 'alta',
                'ultima_actualizacion': 'En fase de integraci√≥n entre todos los sistema que lo constituye (backend portal, app POS).',
                'listo_para_ofrecer': 'no'
            },
            {
                'nombre': 'Vuelo digital',
                'fase': 'completado',
                'objetivo': 'Desarrollar e implementar app que realice vuelos digitales a trav√©s de un pago m√≥vil o cr√©dito inmediato desde el POS. Con los bancos: Banco Activo, BDV, Exterior, BFC, Banco Plaza, Tesoro, Bancrece, Banplus',
                'status': 'en_seguimiento',
                'prioridad': 'normal',
                'ultima_actualizacion': 'Con todos los bancos en producci√≥n.',
                'listo_para_ofrecer': 'si'
            },
            {
                'nombre': 'DisAccess',
                'fase': 'ejecucion',
                'objetivo': 'Desarrollar app para el control de acceso a √°reas restringidas usando los dispositivos POS N62.',
                'status': 'en_curso',
                'prioridad': 'normal',
                'ultima_actualizacion': 'En desarrollo.',
                'listo_para_ofrecer': 'no'
            },
            {
                'nombre': 'DisApp',
                'fase': 'ejecucion',
                'objetivo': 'Implementar app para clientes Disglobal que permita la autogesti√≥n desde el POS, consulta de estado de cuenta, env√≠o de saldos y contacto.',
                'status': 'pausado',
                'prioridad': 'normal',
                'ultima_actualizacion': 'El proyecto se encuentra detenido debido a no tener prioridad de ejecuci√≥n.',
                'listo_para_ofrecer': 'no'
            },
            {
                'nombre': 'DisChange',
                'fase': 'completado',
                'objetivo': 'Herramienta que permite realizar la conversi√≥n de montos en divisas a Bol√≠vares y ejecutar el pago del mismo a trav√©s del POS.',
                'status': 'en_seguimiento',
                'prioridad': 'normal',
                'ultima_actualizacion': 'En producci√≥n primera versi√≥n.',
                'listo_para_ofrecer': 'si'
            },
            {
                'nombre': 'Disconnect BPlaza',
                'fase': 'completado',
                'objetivo': 'Desarrollar sistema de autogesti√≥n para el circuito cerrado de pagos en eventos fijos.',
                'status': 'en_seguimiento',
                'prioridad': 'alta',
                'ultima_actualizacion': 'Sistema en producci√≥n piloto con el banco. Se est√°n realizando mejoras.',
                'listo_para_ofrecer': 'no'
            },
            {
                'nombre': 'Disconnect Eventos',
                'fase': 'completado',
                'objetivo': 'Desarrollar sistema para el circuito cerrado de pagos en eventos temporales.',
                'status': 'en_seguimiento',
                'prioridad': 'alta',
                'ultima_actualizacion': 'Sistema en producci√≥n, ya se ha usado en eventos. Se est√°n realizando mejoras.',
                'listo_para_ofrecer': 'si'
            },
            {
                'nombre': 'DisPay',
                'fase': 'ejecucion',
                'objetivo': 'Desarrollar app para ejecutar recargas de diferentes servicios, como operadoras telef√≥nicas, desde el POS.',
                'status': 'pausado',
                'prioridad': 'normal',
                'ultima_actualizacion': 'El proyecto se encuentra detenido debido a no tener prioridad de ejecuci√≥n.',
                'listo_para_ofrecer': 'no'
            },
            {
                'nombre': 'Midaz',
                'fase': 'ejecucion',
                'objetivo': 'Desarrollar app para el manejo de facturaci√≥n f√≠sica y registro de inventario en comercios de distintas categor√≠as.',
                'status': 'en_curso',
                'prioridad': 'alta',
                'ultima_actualizacion': 'En desarrollo.',
                'listo_para_ofrecer': 'no'
            },
            {
                'nombre': 'Corpoelec',
                'fase': 'completado',
                'objetivo': 'App que permite la consulta del estado de cuenta de los contratos y el pago del mismo a trav√©s de la integraci√≥n con la app financiera.',
                'status': 'en_seguimiento',
                'prioridad': 'alta',
                'ultima_actualizacion': 'En producci√≥n. Con nueva versi√≥n generada en fase piloto.',
                'listo_para_ofrecer': 'si'
            },
            {
                'nombre': 'DisLink',
                'fase': 'completado',
                'objetivo': 'Ecosistema cerrado que brinda soluciones de conciliaci√≥n de pagos',
                'status': 'en_seguimiento',
                'prioridad': 'alta',
                'ultima_actualizacion': 'En producci√≥n, actualmente implementado con Farmatodo y aerol√≠neas (las 4 user). Se est√° trabajando la √∫ltima, en fase piloto.',
                'listo_para_ofrecer': 'si'
            }
        ]

        # Eliminar proyectos existentes si ya existen
        Project.objects.all().delete()
        
        # Crear los proyectos
        projects_created = 0
        for project_data in projects_data:
            project, created = Project.objects.get_or_create(
                nombre=project_data['nombre'],
                defaults=project_data
            )
            if created:
                projects_created += 1
                self.stdout.write(
                    self.style.SUCCESS(f'‚úÖ Proyecto creado: {project.nombre}')
                )
            else:
                self.stdout.write(
                    self.style.WARNING(f'‚ö†Ô∏è  Proyecto ya existe: {project.nombre}')
                )

        self.stdout.write(
            self.style.SUCCESS(
                f'\nüéâ Proceso completado: {projects_created} proyectos creados de {len(projects_data)} total'
            )
        )
        
        # Mostrar estad√≠sticas
        total_projects = Project.objects.count()
        en_curso = Project.objects.filter(status='en_curso').count()
        en_seguimiento = Project.objects.filter(status='en_seguimiento').count()
        pausados = Project.objects.filter(status='pausado').count()
        listos = Project.objects.filter(listo_para_ofrecer='si').count()
        
        self.stdout.write(
            self.style.SUCCESS(f'\nüìä Estad√≠sticas:')
        )
        self.stdout.write(f'   Total de proyectos: {total_projects}')
        self.stdout.write(f'   En curso: {en_curso}')
        self.stdout.write(f'   En seguimiento: {en_seguimiento}')
        self.stdout.write(f'   Pausados: {pausados}')
        self.stdout.write(f'   Listos para ofrecer: {listos}')
